# This file was generated based on ".graphqlconfig". Do not edit manually.

schema {
  query: Query
  mutation: Mutation
}

"A node, according to the Relay specification."
interface Node {
  "The id of this node."
  id: ID!
}

type Mutation {
  "Creates a User."
  createUser(input: createUserInput!): createUserPayload
  "Deletes a User."
  deleteUser(input: deleteUserInput!): deleteUserPayload
  "Updates a User."
  updateUser(input: updateUserInput!): updateUserPayload
}

type Query {
  node(id: ID!): Node
  user(id: ID!): User
  users(
    "Returns the elements in the list that come after the specified cursor."
    after: String
    "Returns the elements in the list that come before the specified cursor."
    before: String
    "Returns the first n elements from the list."
    first: Int
    "Returns the last n elements from the list."
    last: Int
  ): UserConnection
}

type User implements Node {
  _id: Int!
  androidToken: String
  code: String
  email: String!
  id: ID!
  iosToken: String
  name: String!
  phone: String!
}

"Connection for User."
type UserConnection {
  edges: [UserEdge]
  pageInfo: UserPageInfo!
  totalCount: Int!
}

"Edge of User."
type UserEdge {
  cursor: String!
  node: User
}

"Information about the current page."
type UserPageInfo {
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
}

type createUserPayload {
  clientMutationId: String
  user: User
}

type deleteUserPayload {
  clientMutationId: String
  user: User
}

type updateUserPayload {
  clientMutationId: String
  user: User
}

input createUserInput {
  androidToken: String
  clientMutationId: String
  code: String
  email: String!
  images: [String]
  iosToken: String
  name: String!
  phone: String!
}

input deleteUserInput {
  clientMutationId: String
  id: ID!
}

input updateUserInput {
  androidToken: String
  clientMutationId: String
  code: String
  email: String
  id: ID!
  images: [String]
  iosToken: String
  name: String
  phone: String
}
